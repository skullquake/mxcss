// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package mxcss.actions;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;
import org.apache.commons.io.IOUtils;
import system.proxies.FileDocument;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.UserAction;
import com.mendix.webui.CustomJavaAction;

public class ZipDocuments extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject __ZipFileInput;
	private system.proxies.FileDocument ZipFileInput;
	private java.util.List<IMendixObject> __ListOfDocument;
	private java.util.List<system.proxies.FileDocument> ListOfDocument;

	public ZipDocuments(IContext context, IMendixObject ZipFileInput, java.util.List<IMendixObject> ListOfDocument)
	{
		super(context);
		this.__ZipFileInput = ZipFileInput;
		this.__ListOfDocument = ListOfDocument;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.ZipFileInput = __ZipFileInput == null ? null : system.proxies.FileDocument.initialize(getContext(), __ZipFileInput);

		this.ListOfDocument = new java.util.ArrayList<system.proxies.FileDocument>();
		if (__ListOfDocument != null)
			for (IMendixObject __ListOfDocumentElement : __ListOfDocument)
				this.ListOfDocument.add(system.proxies.FileDocument.initialize(getContext(), __ListOfDocumentElement));

		// BEGIN USER CODE
		File tempFile = File.createTempFile("zipfile", "tmp");
		try (	ZipOutputStream zipfile = new ZipOutputStream(new FileOutputStream(tempFile));
				InputStream zipInputStream = new FileInputStream(tempFile);) {
			List<String> fileList = new ArrayList<String>();
			for (system.proxies.FileDocument file : ListOfDocument) {
				String fileName = file.getName();
				if (fileList.contains(fileName)) fileName = file.getMendixObject().getId().toLong() + " " + fileName;
				fileList.add(fileName);
				zipfile.putNextEntry(new ZipEntry(fileName));
				InputStream inputStream = Core.getFileDocumentContent(getContext(), file.getMendixObject());
				IOUtils.copy(inputStream, zipfile);
				//zipfile.finish();
				zipfile.flush();
				zipfile.closeEntry();
			}
			zipfile.finish();
			//zipfile.close();
			Core.storeFileDocumentContent(this.getContext(), ZipFileInput.getMendixObject(), zipInputStream);
			tempFile.delete();
		}

	    return true;		
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ZipDocuments";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
